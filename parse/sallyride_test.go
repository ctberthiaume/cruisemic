package parse

import (
	"testing"
	"time"

	"github.com/stretchr/testify/assert"
)

func TestSallyRideParserRegistry(t *testing.T) {
	assert := assert.New(t)
	constructor, ok := ParserRegistry["Sally Ride"]
	assert.True(ok, "Sally Ride parser is registered")
	if ok {
		p := constructor("testproject", 0)
		_, ok = p.(*SallyRideParser)
		assert.True(ok, "Sally Ride parser is registered")
	}
}

type testSRLineData struct {
	name        string
	input       string
	expected    Data
	expectError bool
}

func TestSRLines(t *testing.T) {
	t0, _ := time.Parse(time.RFC3339, "2019-08-21T00:00:00Z")
	testData := []testSRLineData{
		{
			"empty line",
			"",
			Data{},
			false,
		},
		{
			"bad feed ID",
			"$WOR,210819,000000,SR1912,CN0,28.34,AT2,1003.60,BP2,1005.33,BS2,56.80,RH2,-10.18,RT2,-17.08,DP2,2.0,PR2,4.7,WS2,275.2,WD2,8.0,TW2,236.0,TI2,300.97,LD1,300.96,LB1,-24.00,LT1,456.748,LW1,41.56,SW2,239.87,PA2,-99.00,SL9,-99.00,SX9,21.711576,LA1,121.245466,LO1,0.5,GT1,21.2,CR1,12.2,SP1,1566345600,ZD1,16.5,GA1,209.0,GS1,21.711576,LA1,121.245434,LO1,0.5,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-2.5,GA1,610.0,GS1,21.711612,LA1,121.245401,LO1,0.1,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-4.6,GA1,209.0,GS1,-99.0,BT9,-99.0,LF9,-99.0,HF9,-99.0,MB9,-99.0,MB9,-99.00,IP9,-99.0000,IV9,-99.0,IA9,28.510,TT2,55.9744,TC2,34.448,SA2,21.825,SD2,1541.915,SV2,55.9744,TG2,0.00,FI2,0.00,FI2,24.132,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.414,SV2,0.1020,TG2,0.00,FI2,23.668,OT2,2.584,OX2,4.863,OS2,0.037,FL2,1.549,TB2,-0.255,FL2,0.085,TR2,28.274,BA2,11.46,GY1,11.14,GY1,9.84,GY1,11.62,GY1,-99,GC9,0.0,ZO1,0.0,ZS1,265,ZT1,1,ZI1,0.0,ZO1,0.0,ZS1,-83,ZT1,2,ZI1,14.8,ZO1,0.0,ZS1,289,ZT1,3,ZI1,28.509,TT2,55.9742,TC2,34.449,SA2,21.826,SD2,1541.913,SV2,55.9742,TG2,24.131,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.413,SV2,0.1020,TG2,-99.000,MG9,-99.0,MD9,-99.0,MS9,-99.000,MG9,-99.0,MD9,-99.0,MS9*59",
			Data{},
			false,
		},
		{
			"bad PAR",
			"$WICOR,210819,000000,SR1912,CN0,28.34,AT2,1003.60,BP2,1005.33,BS2,56.80,RH2,-10.18,RT2,-17.08,DP2,2.0,PR2,4.7,WS2,275.2,WD2,8.0,TW2,236.0,TI2,300.97,LD1,300.96,LB1,-24.00,LT1,456.748,LW1,41.56,SW2,2a39.87,PA2,-99.00,SL9,-99.00,SX9,21.711576,LA1,121.245466,LO1,0.5,GT1,21.2,CR1,12.2,SP1,1566345600,ZD1,16.5,GA1,209.0,GS1,21.711576,LA1,121.245434,LO1,0.5,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-2.5,GA1,610.0,GS1,21.711612,LA1,121.245401,LO1,0.1,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-4.6,GA1,209.0,GS1,-99.0,BT9,-99.0,LF9,-99.0,HF9,-99.0,MB9,-99.0,MB9,-99.00,IP9,-99.0000,IV9,-99.0,IA9,28.510,TT2,55.9744,TC2,34.448,SA2,21.825,SD2,1541.915,SV2,55.9744,TG2,0.00,FI2,0.00,FI2,24.132,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.414,SV2,0.1020,TG2,0.00,FI2,23.668,OT2,2.584,OX2,4.863,OS2,0.037,FL2,1.549,TB2,-0.255,FL2,0.085,TR2,28.274,BA2,11.46,GY1,11.14,GY1,9.84,GY1,11.62,GY1,-99,GC9,0.0,ZO1,0.0,ZS1,265,ZT1,1,ZI1,0.0,ZO1,0.0,ZS1,-83,ZT1,2,ZI1,14.8,ZO1,0.0,ZS1,289,ZT1,3,ZI1,28.509,TT2,55.9742,TC2,34.449,SA2,21.826,SD2,1541.913,SV2,55.9742,TG2,24.131,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.413,SV2,0.1020,TG2,-99.000,MG9,-99.0,MD9,-99.0,MS9,-99.000,MG9,-99.0,MD9,-99.0,MS9*59",
			Data{},
			true,
		},
		{
			"bad lat",
			"$WICOR,210819,000000,SR1912,CN0,28.34,AT2,1003.60,BP2,1005.33,BS2,56.80,RH2,-10.18,RT2,-17.08,DP2,2.0,PR2,4.7,WS2,275.2,WD2,8.0,TW2,236.0,TI2,300.97,LD1,300.96,LB1,-24.00,LT1,456.748,LW1,41.56,SW2,239.87,PA2,-99.00,SL9,-99.00,SX9,2a1.711576,LA1,121.245466,LO1,0.5,GT1,21.2,CR1,12.2,SP1,1566345600,ZD1,16.5,GA1,209.0,GS1,21.711576,LA1,121.245434,LO1,0.5,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-2.5,GA1,610.0,GS1,21.711612,LA1,121.245401,LO1,0.1,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-4.6,GA1,209.0,GS1,-99.0,BT9,-99.0,LF9,-99.0,HF9,-99.0,MB9,-99.0,MB9,-99.00,IP9,-99.0000,IV9,-99.0,IA9,28.510,TT2,55.9744,TC2,34.448,SA2,21.825,SD2,1541.915,SV2,55.9744,TG2,0.00,FI2,0.00,FI2,24.132,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.414,SV2,0.1020,TG2,0.00,FI2,23.668,OT2,2.584,OX2,4.863,OS2,0.037,FL2,1.549,TB2,-0.255,FL2,0.085,TR2,28.274,BA2,11.46,GY1,11.14,GY1,9.84,GY1,11.62,GY1,-99,GC9,0.0,ZO1,0.0,ZS1,265,ZT1,1,ZI1,0.0,ZO1,0.0,ZS1,-83,ZT1,2,ZI1,14.8,ZO1,0.0,ZS1,289,ZT1,3,ZI1,28.509,TT2,55.9742,TC2,34.449,SA2,21.826,SD2,1541.913,SV2,55.9742,TG2,24.131,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.413,SV2,0.1020,TG2,-99.000,MG9,-99.0,MD9,-99.0,MS9,-99.000,MG9,-99.0,MD9,-99.0,MS9*59",
			Data{},
			true,
		},
		{
			"bad lon",
			"$WICOR,210819,000000,SR1912,CN0,28.34,AT2,1003.60,BP2,1005.33,BS2,56.80,RH2,-10.18,RT2,-17.08,DP2,2.0,PR2,4.7,WS2,275.2,WD2,8.0,TW2,236.0,TI2,300.97,LD1,300.96,LB1,-24.00,LT1,456.748,LW1,41.56,SW2,239.87,PA2,-99.00,SL9,-99.00,SX9,21.711576,LA1,12a1.245466,LO1,0.5,GT1,21.2,CR1,12.2,SP1,1566345600,ZD1,16.5,GA1,209.0,GS1,21.711576,LA1,121.245434,LO1,0.5,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-2.5,GA1,610.0,GS1,21.711612,LA1,121.245401,LO1,0.1,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-4.6,GA1,209.0,GS1,-99.0,BT9,-99.0,LF9,-99.0,HF9,-99.0,MB9,-99.0,MB9,-99.00,IP9,-99.0000,IV9,-99.0,IA9,28.510,TT2,55.9744,TC2,34.448,SA2,21.825,SD2,1541.915,SV2,55.9744,TG2,0.00,FI2,0.00,FI2,24.132,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.414,SV2,0.1020,TG2,0.00,FI2,23.668,OT2,2.584,OX2,4.863,OS2,0.037,FL2,1.549,TB2,-0.255,FL2,0.085,TR2,28.274,BA2,11.46,GY1,11.14,GY1,9.84,GY1,11.62,GY1,-99,GC9,0.0,ZO1,0.0,ZS1,265,ZT1,1,ZI1,0.0,ZO1,0.0,ZS1,-83,ZT1,2,ZI1,14.8,ZO1,0.0,ZS1,289,ZT1,3,ZI1,28.509,TT2,55.9742,TC2,34.449,SA2,21.826,SD2,1541.913,SV2,55.9742,TG2,24.131,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.413,SV2,0.1020,TG2,-99.000,MG9,-99.0,MD9,-99.0,MS9,-99.000,MG9,-99.0,MD9,-99.0,MS9*59",
			Data{},
			true,
		},
		{
			"bad lat",
			"$WICOR,210819,000000,SR1912,CN0,28.34,AT2,1003.60,BP2,1005.33,BS2,56.80,RH2,-10.18,RT2,-17.08,DP2,2.0,PR2,4.7,WS2,275.2,WD2,8.0,TW2,236.0,TI2,300.97,LD1,300.96,LB1,-24.00,LT1,456.748,LW1,41.56,SW2,239.87,PA2,-99.00,SL9,-99.00,SX9,201.711576,LA1,121.245466,LO1,0.5,GT1,21.2,CR1,12.2,SP1,1566345600,ZD1,16.5,GA1,209.0,GS1,21.711576,LA1,121.245434,LO1,0.5,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-2.5,GA1,610.0,GS1,21.711612,LA1,121.245401,LO1,0.1,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-4.6,GA1,209.0,GS1,-99.0,BT9,-99.0,LF9,-99.0,HF9,-99.0,MB9,-99.0,MB9,-99.00,IP9,-99.0000,IV9,-99.0,IA9,28.510,TT2,55.9744,TC2,34.448,SA2,21.825,SD2,1541.915,SV2,55.9744,TG2,0.00,FI2,0.00,FI2,24.132,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.414,SV2,0.1020,TG2,0.00,FI2,23.668,OT2,2.584,OX2,4.863,OS2,0.037,FL2,1.549,TB2,-0.255,FL2,0.085,TR2,28.274,BA2,11.46,GY1,11.14,GY1,9.84,GY1,11.62,GY1,-99,GC9,0.0,ZO1,0.0,ZS1,265,ZT1,1,ZI1,0.0,ZO1,0.0,ZS1,-83,ZT1,2,ZI1,14.8,ZO1,0.0,ZS1,289,ZT1,3,ZI1,28.509,TT2,55.9742,TC2,34.449,SA2,21.826,SD2,1541.913,SV2,55.9742,TG2,24.131,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.413,SV2,0.1020,TG2,-99.000,MG9,-99.0,MD9,-99.0,MS9,-99.000,MG9,-99.0,MD9,-99.0,MS9*59",
			Data{},
			true,
		},
		{
			"bad lon",
			"$WICOR,210819,000000,SR1912,CN0,28.34,AT2,1003.60,BP2,1005.33,BS2,56.80,RH2,-10.18,RT2,-17.08,DP2,2.0,PR2,4.7,WS2,275.2,WD2,8.0,TW2,236.0,TI2,300.97,LD1,300.96,LB1,-24.00,LT1,456.748,LW1,41.56,SW2,239.87,PA2,-99.00,SL9,-99.00,SX9,21.711576,LA1,191.245466,LO1,0.5,GT1,21.2,CR1,12.2,SP1,1566345600,ZD1,16.5,GA1,209.0,GS1,21.711576,LA1,121.245434,LO1,0.5,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-2.5,GA1,610.0,GS1,21.711612,LA1,121.245401,LO1,0.1,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-4.6,GA1,209.0,GS1,-99.0,BT9,-99.0,LF9,-99.0,HF9,-99.0,MB9,-99.0,MB9,-99.00,IP9,-99.0000,IV9,-99.0,IA9,28.510,TT2,55.9744,TC2,34.448,SA2,21.825,SD2,1541.915,SV2,55.9744,TG2,0.00,FI2,0.00,FI2,24.132,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.414,SV2,0.1020,TG2,0.00,FI2,23.668,OT2,2.584,OX2,4.863,OS2,0.037,FL2,1.549,TB2,-0.255,FL2,0.085,TR2,28.274,BA2,11.46,GY1,11.14,GY1,9.84,GY1,11.62,GY1,-99,GC9,0.0,ZO1,0.0,ZS1,265,ZT1,1,ZI1,0.0,ZO1,0.0,ZS1,-83,ZT1,2,ZI1,14.8,ZO1,0.0,ZS1,289,ZT1,3,ZI1,28.509,TT2,55.9742,TC2,34.449,SA2,21.826,SD2,1541.913,SV2,55.9742,TG2,24.131,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.413,SV2,0.1020,TG2,-99.000,MG9,-99.0,MD9,-99.0,MS9,-99.000,MG9,-99.0,MD9,-99.0,MS9*59",
			Data{},
			true,
		},
		{
			"bad course",
			"$WICOR,210819,000000,SR1912,CN0,28.34,AT2,1003.60,BP2,1005.33,BS2,56.80,RH2,-10.18,RT2,-17.08,DP2,2.0,PR2,4.7,WS2,275.2,WD2,8.0,TW2,236.0,TI2,300.97,LD1,300.96,LB1,-24.00,LT1,456.748,LW1,41.56,SW2,239.87,PA2,-99.00,SL9,-99.00,SX9,21.711576,LA1,121.245466,LO1,0.5,GT1,2a1.2,CR1,12.2,SP1,1566345600,ZD1,16.5,GA1,209.0,GS1,21.711576,LA1,121.245434,LO1,0.5,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-2.5,GA1,610.0,GS1,21.711612,LA1,121.245401,LO1,0.1,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-4.6,GA1,209.0,GS1,-99.0,BT9,-99.0,LF9,-99.0,HF9,-99.0,MB9,-99.0,MB9,-99.00,IP9,-99.0000,IV9,-99.0,IA9,28.510,TT2,55.9744,TC2,34.448,SA2,21.825,SD2,1541.915,SV2,55.9744,TG2,0.00,FI2,0.00,FI2,24.132,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.414,SV2,0.1020,TG2,0.00,FI2,23.668,OT2,2.584,OX2,4.863,OS2,0.037,FL2,1.549,TB2,-0.255,FL2,0.085,TR2,28.274,BA2,11.46,GY1,11.14,GY1,9.84,GY1,11.62,GY1,-99,GC9,0.0,ZO1,0.0,ZS1,265,ZT1,1,ZI1,0.0,ZO1,0.0,ZS1,-83,ZT1,2,ZI1,14.8,ZO1,0.0,ZS1,289,ZT1,3,ZI1,28.509,TT2,55.9742,TC2,34.449,SA2,21.826,SD2,1541.913,SV2,55.9742,TG2,24.131,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.413,SV2,0.1020,TG2,-99.000,MG9,-99.0,MD9,-99.0,MS9,-99.000,MG9,-99.0,MD9,-99.0,MS9*59",
			Data{},
			true,
		},
		{
			"bad speed",
			"$WICOR,210819,000000,SR1912,CN0,28.34,AT2,1003.60,BP2,1005.33,BS2,56.80,RH2,-10.18,RT2,-17.08,DP2,2.0,PR2,4.7,WS2,275.2,WD2,8.0,TW2,236.0,TI2,300.97,LD1,300.96,LB1,-24.00,LT1,456.748,LW1,41.56,SW2,239.87,PA2,-99.00,SL9,-99.00,SX9,21.711576,LA1,121.245466,LO1,0.5,GT1,21.2,CR1,1a2.2,SP1,1566345600,ZD1,16.5,GA1,209.0,GS1,21.711576,LA1,121.245434,LO1,0.5,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-2.5,GA1,610.0,GS1,21.711612,LA1,121.245401,LO1,0.1,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-4.6,GA1,209.0,GS1,-99.0,BT9,-99.0,LF9,-99.0,HF9,-99.0,MB9,-99.0,MB9,-99.00,IP9,-99.0000,IV9,-99.0,IA9,28.510,TT2,55.9744,TC2,34.448,SA2,21.825,SD2,1541.915,SV2,55.9744,TG2,0.00,FI2,0.00,FI2,24.132,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.414,SV2,0.1020,TG2,0.00,FI2,23.668,OT2,2.584,OX2,4.863,OS2,0.037,FL2,1.549,TB2,-0.255,FL2,0.085,TR2,28.274,BA2,11.46,GY1,11.14,GY1,9.84,GY1,11.62,GY1,-99,GC9,0.0,ZO1,0.0,ZS1,265,ZT1,1,ZI1,0.0,ZO1,0.0,ZS1,-83,ZT1,2,ZI1,14.8,ZO1,0.0,ZS1,289,ZT1,3,ZI1,28.509,TT2,55.9742,TC2,34.449,SA2,21.826,SD2,1541.913,SV2,55.9742,TG2,24.131,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.413,SV2,0.1020,TG2,-99.000,MG9,-99.0,MD9,-99.0,MS9,-99.000,MG9,-99.0,MD9,-99.0,MS9*59",
			Data{},
			true,
		},
		{
			"bad timestamp",
			"$WICOR,210819,000000,SR1912,CN0,28.34,AT2,1003.60,BP2,1005.33,BS2,56.80,RH2,-10.18,RT2,-17.08,DP2,2.0,PR2,4.7,WS2,275.2,WD2,8.0,TW2,236.0,TI2,300.97,LD1,300.96,LB1,-24.00,LT1,456.748,LW1,41.56,SW2,239.87,PA2,-99.00,SL9,-99.00,SX9,21.711576,LA1,121.245466,LO1,0.5,GT1,21.2,CR1,12.2,SP1,15663a45600,ZD1,16.5,GA1,209.0,GS1,21.711576,LA1,121.245434,LO1,0.5,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-2.5,GA1,610.0,GS1,21.711612,LA1,121.245401,LO1,0.1,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-4.6,GA1,209.0,GS1,-99.0,BT9,-99.0,LF9,-99.0,HF9,-99.0,MB9,-99.0,MB9,-99.00,IP9,-99.0000,IV9,-99.0,IA9,28.510,TT2,55.9744,TC2,34.448,SA2,21.825,SD2,1541.915,SV2,55.9744,TG2,0.00,FI2,0.00,FI2,24.132,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.414,SV2,0.1020,TG2,0.00,FI2,23.668,OT2,2.584,OX2,4.863,OS2,0.037,FL2,1.549,TB2,-0.255,FL2,0.085,TR2,28.274,BA2,11.46,GY1,11.14,GY1,9.84,GY1,11.62,GY1,-99,GC9,0.0,ZO1,0.0,ZS1,265,ZT1,1,ZI1,0.0,ZO1,0.0,ZS1,-83,ZT1,2,ZI1,14.8,ZO1,0.0,ZS1,289,ZT1,3,ZI1,28.509,TT2,55.9742,TC2,34.449,SA2,21.826,SD2,1541.913,SV2,55.9742,TG2,24.131,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.413,SV2,0.1020,TG2,-99.000,MG9,-99.0,MD9,-99.0,MS9,-99.000,MG9,-99.0,MD9,-99.0,MS9*59",
			Data{},
			true,
		},
		{
			"bad temp-bow",
			"$WICOR,210819,000000,SR1912,CN0,28.34,AT2,1003.60,BP2,1005.33,BS2,56.80,RH2,-10.18,RT2,-17.08,DP2,2.0,PR2,4.7,WS2,275.2,WD2,8.0,TW2,236.0,TI2,300.97,LD1,300.96,LB1,-24.00,LT1,456.748,LW1,41.56,SW2,239.87,PA2,-99.00,SL9,-99.00,SX9,21.711576,LA1,121.245466,LO1,0.5,GT1,21.2,CR1,12.2,SP1,1566345600,ZD1,16.5,GA1,209.0,GS1,21.711576,LA1,121.245434,LO1,0.5,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-2.5,GA1,610.0,GS1,21.711612,LA1,121.245401,LO1,0.1,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-4.6,GA1,209.0,GS1,-99.0,BT9,-99.0,LF9,-99.0,HF9,-99.0,MB9,-99.0,MB9,-99.00,IP9,-99.0000,IV9,-99.0,IA9,2a8.510,TT2,55.9744,TC2,34.448,SA2,21.825,SD2,1541.915,SV2,55.9744,TG2,0.00,FI2,0.00,FI2,24.132,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.414,SV2,0.1020,TG2,0.00,FI2,23.668,OT2,2.584,OX2,4.863,OS2,0.037,FL2,1.549,TB2,-0.255,FL2,0.085,TR2,28.274,BA2,11.46,GY1,11.14,GY1,9.84,GY1,11.62,GY1,-99,GC9,0.0,ZO1,0.0,ZS1,265,ZT1,1,ZI1,0.0,ZO1,0.0,ZS1,-83,ZT1,2,ZI1,14.8,ZO1,0.0,ZS1,289,ZT1,3,ZI1,28.509,TT2,55.9742,TC2,34.449,SA2,21.826,SD2,1541.913,SV2,55.9742,TG2,24.131,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.413,SV2,0.1020,TG2,-99.000,MG9,-99.0,MD9,-99.0,MS9,-99.000,MG9,-99.0,MD9,-99.0,MS9*59",
			Data{},
			true,
		},
		{
			"bad conductivity",
			"$WICOR,210819,000000,SR1912,CN0,28.34,AT2,1003.60,BP2,1005.33,BS2,56.80,RH2,-10.18,RT2,-17.08,DP2,2.0,PR2,4.7,WS2,275.2,WD2,8.0,TW2,236.0,TI2,300.97,LD1,300.96,LB1,-24.00,LT1,456.748,LW1,41.56,SW2,239.87,PA2,-99.00,SL9,-99.00,SX9,21.711576,LA1,121.245466,LO1,0.5,GT1,21.2,CR1,12.2,SP1,1566345600,ZD1,16.5,GA1,209.0,GS1,21.711576,LA1,121.245434,LO1,0.5,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-2.5,GA1,610.0,GS1,21.711612,LA1,121.245401,LO1,0.1,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-4.6,GA1,209.0,GS1,-99.0,BT9,-99.0,LF9,-99.0,HF9,-99.0,MB9,-99.0,MB9,-99.00,IP9,-99.0000,IV9,-99.0,IA9,28.510,TT2,5a5.9744,TC2,34.448,SA2,21.825,SD2,1541.915,SV2,55.9744,TG2,0.00,FI2,0.00,FI2,24.132,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.414,SV2,0.1020,TG2,0.00,FI2,23.668,OT2,2.584,OX2,4.863,OS2,0.037,FL2,1.549,TB2,-0.255,FL2,0.085,TR2,28.274,BA2,11.46,GY1,11.14,GY1,9.84,GY1,11.62,GY1,-99,GC9,0.0,ZO1,0.0,ZS1,265,ZT1,1,ZI1,0.0,ZO1,0.0,ZS1,-83,ZT1,2,ZI1,14.8,ZO1,0.0,ZS1,289,ZT1,3,ZI1,28.509,TT2,55.9742,TC2,34.449,SA2,21.826,SD2,1541.913,SV2,55.9742,TG2,24.131,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.413,SV2,0.1020,TG2,-99.000,MG9,-99.0,MD9,-99.0,MS9,-99.000,MG9,-99.0,MD9,-99.0,MS9*59",
			Data{},
			true,
		},
		{
			"bad salinity",
			"$WICOR,210819,000000,SR1912,CN0,28.34,AT2,1003.60,BP2,1005.33,BS2,56.80,RH2,-10.18,RT2,-17.08,DP2,2.0,PR2,4.7,WS2,275.2,WD2,8.0,TW2,236.0,TI2,300.97,LD1,300.96,LB1,-24.00,LT1,456.748,LW1,41.56,SW2,239.87,PA2,-99.00,SL9,-99.00,SX9,21.711576,LA1,121.245466,LO1,0.5,GT1,21.2,CR1,12.2,SP1,1566345600,ZD1,16.5,GA1,209.0,GS1,21.711576,LA1,121.245434,LO1,0.5,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-2.5,GA1,610.0,GS1,21.711612,LA1,121.245401,LO1,0.1,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-4.6,GA1,209.0,GS1,-99.0,BT9,-99.0,LF9,-99.0,HF9,-99.0,MB9,-99.0,MB9,-99.00,IP9,-99.0000,IV9,-99.0,IA9,28.510,TT2,55.9744,TC2,3a4.448,SA2,21.825,SD2,1541.915,SV2,55.9744,TG2,0.00,FI2,0.00,FI2,24.132,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.414,SV2,0.1020,TG2,0.00,FI2,23.668,OT2,2.584,OX2,4.863,OS2,0.037,FL2,1.549,TB2,-0.255,FL2,0.085,TR2,28.274,BA2,11.46,GY1,11.14,GY1,9.84,GY1,11.62,GY1,-99,GC9,0.0,ZO1,0.0,ZS1,265,ZT1,1,ZI1,0.0,ZO1,0.0,ZS1,-83,ZT1,2,ZI1,14.8,ZO1,0.0,ZS1,289,ZT1,3,ZI1,28.509,TT2,55.9742,TC2,34.449,SA2,21.826,SD2,1541.913,SV2,55.9742,TG2,24.131,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.413,SV2,0.1020,TG2,-99.000,MG9,-99.0,MD9,-99.0,MS9,-99.000,MG9,-99.0,MD9,-99.0,MS9*59",
			Data{},
			true,
		},
		{
			"bad temp-lab",
			"$WICOR,210819,000000,SR1912,CN0,28.34,AT2,1003.60,BP2,1005.33,BS2,56.80,RH2,-10.18,RT2,-17.08,DP2,2.0,PR2,4.7,WS2,275.2,WD2,8.0,TW2,236.0,TI2,300.97,LD1,300.96,LB1,-24.00,LT1,456.748,LW1,41.56,SW2,239.87,PA2,-99.00,SL9,-99.00,SX9,21.711576,LA1,121.245466,LO1,0.5,GT1,21.2,CR1,12.2,SP1,1566345600,ZD1,16.5,GA1,209.0,GS1,21.711576,LA1,121.245434,LO1,0.5,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-2.5,GA1,610.0,GS1,21.711612,LA1,121.245401,LO1,0.1,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-4.6,GA1,209.0,GS1,-99.0,BT9,-99.0,LF9,-99.0,HF9,-99.0,MB9,-99.0,MB9,-99.00,IP9,-99.0000,IV9,-99.0,IA9,28.510,TT2,55.9744,TC2,34.448,SA2,21.825,SD2,1541.915,SV2,55.9744,TG2,0.00,FI2,0.00,FI2,2a4.132,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.414,SV2,0.1020,TG2,0.00,FI2,23.668,OT2,2.584,OX2,4.863,OS2,0.037,FL2,1.549,TB2,-0.255,FL2,0.085,TR2,28.274,BA2,11.46,GY1,11.14,GY1,9.84,GY1,11.62,GY1,-99,GC9,0.0,ZO1,0.0,ZS1,265,ZT1,1,ZI1,0.0,ZO1,0.0,ZS1,-83,ZT1,2,ZI1,14.8,ZO1,0.0,ZS1,289,ZT1,3,ZI1,28.509,TT2,55.9742,TC2,34.449,SA2,21.826,SD2,1541.913,SV2,55.9742,TG2,24.131,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.413,SV2,0.1020,TG2,-99.000,MG9,-99.0,MD9,-99.0,MS9,-99.000,MG9,-99.0,MD9,-99.0,MS9*59",
			Data{},
			true,
		},
		{
			"bad fluormeter",
			"$WICOR,210819,000000,SR1912,CN0,28.34,AT2,1003.60,BP2,1005.33,BS2,56.80,RH2,-10.18,RT2,-17.08,DP2,2.0,PR2,4.7,WS2,275.2,WD2,8.0,TW2,236.0,TI2,300.97,LD1,300.96,LB1,-24.00,LT1,456.748,LW1,41.56,SW2,239.87,PA2,-99.00,SL9,-99.00,SX9,21.711576,LA1,121.245466,LO1,0.5,GT1,21.2,CR1,12.2,SP1,1566345600,ZD1,16.5,GA1,209.0,GS1,21.711576,LA1,121.245434,LO1,0.5,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-2.5,GA1,610.0,GS1,21.711612,LA1,121.245401,LO1,0.1,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-4.6,GA1,209.0,GS1,-99.0,BT9,-99.0,LF9,-99.0,HF9,-99.0,MB9,-99.0,MB9,-99.00,IP9,-99.0000,IV9,-99.0,IA9,28.510,TT2,55.9744,TC2,34.448,SA2,21.825,SD2,1541.915,SV2,55.9744,TG2,0.00,FI2,0.00,FI2,24.132,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.414,SV2,0.1020,TG2,0.00,FI2,23.668,OT2,2.584,OX2,4.863,OS2,0.0a37,FL2,1.549,TB2,-0.255,FL2,0.085,TR2,28.274,BA2,11.46,GY1,11.14,GY1,9.84,GY1,11.62,GY1,-99,GC9,0.0,ZO1,0.0,ZS1,265,ZT1,1,ZI1,0.0,ZO1,0.0,ZS1,-83,ZT1,2,ZI1,14.8,ZO1,0.0,ZS1,289,ZT1,3,ZI1,28.509,TT2,55.9742,TC2,34.449,SA2,21.826,SD2,1541.913,SV2,55.9742,TG2,24.131,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.413,SV2,0.1020,TG2,-99.000,MG9,-99.0,MD9,-99.0,MS9,-99.000,MG9,-99.0,MD9,-99.0,MS9*59",
			Data{},
			true,
		},
		{
			"missing one field (here PA2 or PAR)",
			"$WICOR,210819,000000,SR1912,CN0,28.34,AT2,1003.60,BP2,1005.33,BS2,56.80,RH2,-10.18,RT2,-17.08,DP2,2.0,PR2,4.7,WS2,275.2,WD2,8.0,TW2,236.0,TI2,300.97,LD1,300.96,LB1,-24.00,LT1,456.748,LW1,41.56,SW2,-99.00,SL9,-99.00,SX9,21.711576,LA1,121.245466,LO1,0.5,GT1,21.2,CR1,12.2,SP1,1566345600,ZD1,16.5,GA1,209.0,GS1,21.711576,LA1,121.245434,LO1,0.5,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-2.5,GA1,610.0,GS1,21.711612,LA1,121.245401,LO1,0.1,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-4.6,GA1,209.0,GS1,-99.0,BT9,-99.0,LF9,-99.0,HF9,-99.0,MB9,-99.0,MB9,-99.00,IP9,-99.0000,IV9,-99.0,IA9,28.510,TT2,55.9744,TC2,34.448,SA2,21.825,SD2,1541.915,SV2,55.9744,TG2,0.00,FI2,0.00,FI2,24.132,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.414,SV2,0.1020,TG2,0.00,FI2,23.668,OT2,2.584,OX2,4.863,OS2,0.037,FL2,1.549,TB2,-0.255,FL2,0.085,TR2,28.274,BA2,11.46,GY1,11.14,GY1,9.84,GY1,11.62,GY1,-99,GC9,0.0,ZO1,0.0,ZS1,265,ZT1,1,ZI1,0.0,ZO1,0.0,ZS1,-83,ZT1,2,ZI1,14.8,ZO1,0.0,ZS1,289,ZT1,3,ZI1,28.509,TT2,55.9742,TC2,34.449,SA2,21.826,SD2,1541.913,SV2,55.9742,TG2,24.131,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.413,SV2,0.1020,TG2,-99.000,MG9,-99.0,MD9,-99.0,MS9,-99.000,MG9,-99.0,MD9,-99.0,MS9*59",
			Data{},
			true,
		},
		{
			"good feed",
			"$WICOR,210819,000000,SR1912,CN0,28.34,AT2,1003.60,BP2,1005.33,BS2,56.80,RH2,-10.18,RT2,-17.08,DP2,2.0,PR2,4.7,WS2,275.2,WD2,8.0,TW2,236.0,TI2,300.97,LD1,300.96,LB1,-24.00,LT1,456.748,LW1,41.56,SW2,239.87,PA2,-99.00,SL9,-99.00,SX9,21.711576,LA1,121.245466,LO1,0.5,GT1,21.2,CR1,12.2,SP1,1566345600,ZD1,16.5,GA1,209.0,GS1,21.711576,LA1,121.245434,LO1,0.5,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-2.5,GA1,610.0,GS1,21.711612,LA1,121.245401,LO1,0.1,GT1,21.1,CR1,11.9,SP1,1566345600,ZD1,-4.6,GA1,209.0,GS1,-99.0,BT9,-99.0,LF9,-99.0,HF9,-99.0,MB9,-99.0,MB9,-99.00,IP9,-99.0000,IV9,-99.0,IA9,28.510,TT2,55.9744,TC2,34.448,SA2,21.825,SD2,1541.915,SV2,55.9744,TG2,0.00,FI2,0.00,FI2,24.132,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.414,SV2,0.1020,TG2,0.00,FI2,23.668,OT2,2.584,OX2,4.863,OS2,0.037,FL2,1.549,TB2,-0.255,FL2,0.085,TR2,28.274,BA2,11.46,GY1,11.14,GY1,9.84,GY1,11.62,GY1,-99,GC9,0.0,ZO1,0.0,ZS1,265,ZT1,1,ZI1,0.0,ZO1,0.0,ZS1,-83,ZT1,2,ZI1,14.8,ZO1,0.0,ZS1,289,ZT1,3,ZI1,28.509,TT2,55.9742,TC2,34.449,SA2,21.826,SD2,1541.913,SV2,55.9742,TG2,24.131,TT2,0.1020,TC2,0.053,SA2,-2.694,SD2,1494.413,SV2,0.1020,TG2,-99.000,MG9,-99.0,MD9,-99.0,MS9,-99.000,MG9,-99.0,MD9,-99.0,MS9*59",
			Data{
				Feed:   "wicor",
				Time:   t0,
				Values: []string{"239.87", "21.711576", "121.245466", "21.2", "12.2", "28.510", "55.9744", "34.448", "24.132", "0.037"},
			},
			false,
		},
	}
	for _, tt := range testData {
		t.Run(tt.name, createSRLinesTest(t, tt))
	}
}

func createSRLinesTest(t *testing.T, tt testSRLineData) func(*testing.T) {
	assert := assert.New(t)
	return func(t *testing.T) {
		p := NewSallyRideParser("test", 0)
		actual, err := p.ParseLine(tt.input)
		if !tt.expectError {
			assert.Nil(err, tt.name)
		} else {
			assert.NotNil(err, tt.name)
		}
		assert.Equal(tt.expected.Feed, actual.Feed, tt.name)
		assert.Equal(tt.expected.Values, actual.Values, tt.name)
		assert.Equal(tt.expected.Time.Format(time.RFC3339Nano), actual.Time.Format(time.RFC3339Nano), tt.name)
	}
}
